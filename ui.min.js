var threads=[],thread_watch=[],jwk_wants_array=false;$(document).ready(function(){var a=$('<div id="thread_button" class="reply_button">New thread</div>'),b=$('<div id="thread_list"></div>');a.click(function(){reply_form(-1)});$("body").append(a);if(window.crypto&&crypto.subtle){crypto.subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:256,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-512"}},true,[]).then(function(d){return crypto.subtle.exportKey("jwk",d.publicKey)},console.error.bind(console,"Unable to generate key.")).then(function(d){if(d instanceof ArrayBuffer){jwk_wants_array=true}},console.error.bind(console,"Unable to export public key."))}$("body").append(b);if(window.EventSource){var c=new EventSource("watch.pl");c.addEventListener("message",function(d){update_threads(JSON.parse(d.data))})}else{$.getJSON("threads",{},update_threads)}});function update_threads(f){var e=threads,c=f.length-e.length,d=$("#thread_list"),b;threads=f;for(b=0;b<c;++b){var a=$("<div>",{"class":"thread_title",id:threads[b].id});d.prepend(a);a.append(threads[b].title)}$(".thread_title").click(show_thread)}function show_thread(){var a=this.id;$(this).unbind("click",show_thread);$(this).bind("click",hide_thread);if(window.EventSource){thread_watch[a]=new EventSource("watch.pl?thread="+a);thread_watch[a].addEventListener("message",function(b){add_comments(a,JSON.parse(b.data))})}else{$.getJSON("thread/"+a,{},function(b){add_comments(a,b)})}}function hide_thread(){var a=this.id;$(this).children().remove();thread_watch[a].close();$(this).unbind("click",hide_thread);$(this).bind("click",show_thread)}function add_comments(f,b){var d=$("#"+f),c,a;if(d.children().length){c=d.children().first();c.children().last().remove()}else{c=$('<div class="thread"></div>');$("#"+f).append(c)}c.bind("click",function(){return false});for(a=c.children().length;a<b.length;++a){var e=$("<div>",{"class":"comment",id:f+"_"+(a+1)});e.append($('<div class="post_number">'+(a+1)+"</div>"));e.append($("<div>").text(b[a].comment));if(window.crypto&&crypto.subtle&&b[a].key){verify_signature(f,a,b[a])}c.append(e)}c.append($('<div class="reply_button">Reply</div>').click(function(){reply_form(f)}))}function verify_signature(e,d,b){var c=new Uint8Array(256),a;for(a=0;a<256;++a){c[a]=b.signature[a]}crypto.subtle.importKey("jwk",jwk_object_to_import(b.key),{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-512"}},true,["verify"]).then(function(f){return crypto.subtle.verify({name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-512"}},f,c,string_to_array(b.comment,Uint16Array))},console.error.bind(console,"Unable to import public key.")).then(function(f){if(f){$("#"+e+"_"+(d+1)).addClass("valid");return crypto.subtle.digest({name:"SHA-1"},string_to_array(b.key.n,Uint8Array))}else{$("#"+e+"_"+(d+1)).addClass("invalid")}},console.error.bind(console,"Unable to verify signature.")).then(function(f){if(f){$("#"+e+"_"+(d+1)).attr("title",btoa(array_to_string(new Uint8Array(f))))}},console.error.bind(console,"Unable to compute hash."))}function reply_form(d){var a=$('<div id="reply_form">'),c=$('<form onsubmit="return false;"></form>'),b=$('<div id="close">Ã—</div>');$("body").append(a);a.append(c);b.click(function(){$("#reply_form").remove()});c.append(b);c.append($("<input>",{type:"hidden",id:"thread",value:d}));if(d<0){c.append($('<input id="title" required placeholder="Title">'))}c.append($('<textarea id="comment" rows="10" required placeholder="Comment"></textarea>'));if(window.crypto&&crypto.subtle){c.append($('<textarea id="key" rows="1" placeholder="Key (optional)" onchange="update_preview()" onkeyup="update_preview()"></textarea>'));c.append($('<input type="text" disabled id="hash_preview">'));c.append($('<input type="button" value="Generate Key" onclick="generate_key()">'))}c.append($('<input type="submit" onclick="submit_form()">'))}function generate_key(){crypto.subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:2048,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-512"}},true,["sign","verify"]).then(function(a){return crypto.subtle.exportKey("jwk",a.privateKey)},console.error.bind(console,"Unable to generate key.")).then(function(a){$("#key").val(jwk_export_to_string(a));update_preview()})}function update_preview(){var a=JSON.parse($("#key").val());if(!a.n){return}crypto.subtle.digest({name:"SHA-1"},string_to_array(a.n,Uint8Array)).then(function(b){$("#hash_preview").val(btoa(array_to_string(new Uint8Array(b))))},console.error.bind(console,"Unable to compute hash."))}function submit_form(){var d=$("#title").val(),b=$("#thread").val(),e=$("#comment").val(),c=$("#key").val();if(c){var a=JSON.parse(c);crypto.subtle.importKey("jwk",jwk_object_to_import(a),{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-512"}},true,["sign"]).then(function(f){delete a.d;delete a.dp;delete a.dq;delete a.p;delete a.q;delete a.qi;a.key_ops=["verify"];return crypto.subtle.sign({name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-512"}},f,string_to_array(e,Uint16Array))},console.error.bind(console,"Unable to import private key.")).then(function(g){var j=new Uint8Array(g),f=new Array(256),h;for(h=0;h<256;++h){f[h]=j[h]}return f},console.error.bind(console,"Unable to sign.")).then(function(f){$.post("post.pl",{title:d,thread:b,comment:e,key:JSON.stringify(a),signature:JSON.stringify(f)},function(){if(window.EventSource){$("#reply_form").remove()}else{location.reload()}}).fail(function(){alert("Post failed. Please check your input and try again.")})})}else{$.post("post.pl",{title:d,thread:b,comment:e},function(){if(window.EventSource){$("#reply_form").remove()}else{location.reload()}}).fail(function(){alert("Post failed. Please check your input and try again.")})}}function string_to_array(a,c){var d=new c(a.length),b;for(b=0;b<a.length;++b){d[b]=a.charCodeAt(b)}return d}function array_to_string(c){var a="",b;for(b=0;b<c.length;++b){a+=String.fromCharCode(c[b])}return a}function jwk_export_to_string(a){if(a instanceof ArrayBuffer){return array_to_string(new Uint8Array(a))}return JSON.stringify(a)}function jwk_object_to_import(a){if(jwk_wants_array){return string_to_array(JSON.stringify(a),Uint8Array)}return a};